version: '3.8'

networks:
  frontend:
    name: frontend
  monitoring:
    name: monitoring

services:
  gateway:
    image: "caddy:latest"
    container_name: "gateway"
    depends_on:
      - api
      - alpha
      - beta
      - gamma
      - delta
      - epsilon
      - zeta
      - eta
      - theta
      - iota
      - kappa
      - lambda
      - mu
      - nu
      - xi
      - omicron
      - pi
      - rho
      - sigma
      - tau
      - upsilon
      - phi
      - chi
      - psi
      - omega
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
  api:
    image: "ewenquim/gourmet:latest"
    container_name: "api"
    platform: linux/amd64
    env_file:
      - .env
    ports:
      - "8083:8083"
    volumes:
      - ./api:/app/data

  cadvisor:
    image: "gcr.io/cadvisor/cadvisor:latest"
    container_name: "cadvisor"
    privileged: true
    devices:
      - "/dev/kmsg"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    image: "prom/prometheus:latest"
    container_name: "prometheus"
    user: "1000"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus

  grafana:
    image: "grafana/grafana:latest"
    container_name: "grafana"
    user: "1000"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana

  astro:
    image: "ewenquim/gourmet-astro:latest"
    container_name: "astro"
    ports:
      - "4321:4321"

  nextjs:
    image: "ewenquim/gourmet-next:latest"
    container_name: "nextjs"
    ports:
      - "3003:3003"

  # React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "frontend"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - frontend
      - monitoring
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - gateway
    environment:
      NODE_ENV: production
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
        reservations:
          cpus: '0.1'
          memory: 200M
  alpha:
    image: "nginx:latest"
    container_name: "alpha"

  beta:
    image: "nginx:latest"
    container_name: "beta"

  gamma:
    image: "nginx:latest"
    container_name: "gamma"

  delta:
    image: "nginx:latest"
    container_name: "delta"

  epsilon:
    image: "nginx:latest"
    container_name: "epsilon"

  zeta:
    image: "nginx:latest"
    container_name: "zeta"

  eta:
    image: "nginx:latest"
    container_name: "eta"

  theta:
    image: "nginx:latest"
    container_name: "theta"

  iota:
    image: "nginx:latest"
    container_name: "iota"

  kappa:
    image: "nginx:latest"
    container_name: "kappa"

  lambda:
    image: "nginx:latest"
    container_name: "lambda"

  mu:
    image: "nginx:latest"
    container_name: "mu"

  nu:
    image: "nginx:latest"
    container_name: "nu"

  xi:
    image: "nginx:latest"
    container_name: "xi"

  omicron:
    image: "nginx:latest"
    container_name: "omicron"

  pi:
    image: "nginx:latest"
    container_name: "pi"

  rho:
    image: "nginx:latest"
    container_name: "rho"

  sigma:
    image: "nginx:latest"
    container_name: "sigma"

  tau:
    image: "nginx:latest"
    container_name: "tau"

  upsilon:
    image: "nginx:latest"
    container_name: "upsilon"

  phi:
    image: "nginx:latest"
    container_name: "phi"

  chi:
    image: "nginx:latest"
    container_name: "chi"

  psi:
    image: "nginx:latest"
    container_name: "psi"

  omega:
    image: "nginx:latest"
    container_name: "omega"

  test:
    image: "nginxdemos/hello:latest"
    container_name: "test"
